{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let AppComponent = class AppComponent {\n  constructor(apiService) {\n    this.apiService = apiService;\n    this.title = 'my-app';\n    this.limitPersonas = 5;\n    this.jsonData = []; //JSON.parse('[{\"Nombre\":\"Usuario1\",\"Puntaje\":370,\"DireccionFoto\":\"assets/fotoperfil.jpeg\"},{\"Nombre\":\"Usuario2\",\"Puntaje\":360,\"DireccionFoto\":\"assets/fotoperfil.jpeg\"},{\"Nombre\":\"Usuario3\",\"Puntaje\":340,\"DireccionFoto\":\"assets/fotoperfil.jpeg\"},{\"Nombre\":\"Usuario4\",\"Puntaje\":340,\"DireccionFoto\":\"assets/fotoperfil.jpeg\"},{\"Nombre\":\"Usuario5\",\"Puntaje\":250,\"DireccionFoto\":\"assets/fotoperfil.jpeg\"}]'); // Variable para almacenar el JSON\n  }\n  //jsonDataCount: number = 0; // Variable para almacenar la cantidad de elementos en el JSON\n  ngOnInit() {\n    // Aquí deberías cargar tu JSON, por ejemplo, desde un servicio HTTP\n    this.apiService.getPuntajesTotalesOrdenadosLimit(this.limitPersonas).subscribe(data => {\n      //console.log(data)\n      this.jsonData = data;\n      //this.jsonDataCount = this.jsonData.length;\n    });\n  }\n\n  Juego1() {\n    this.apiService.getPuntajesPorJuegoOrdenadosLimit(\"Juego1\", this.limitPersonas).subscribe(data => {\n      this.jsonData = data;\n      console.log(data);\n    });\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})], AppComponent);","map":{"version":3,"names":["Component","AppComponent","constructor","apiService","title","limitPersonas","jsonData","ngOnInit","getPuntajesTotalesOrdenadosLimit","subscribe","data","Juego1","getPuntajesPorJuegoOrdenadosLimit","console","log","__decorate","selector","templateUrl","styleUrls"],"sources":["/home/zlatan/Escritorio/PuntuacionesExpo/src/app/app.component.ts"],"sourcesContent":["import { Component, OnInit/*, OnChanges, SimpleChanges*/ } from '@angular/core';\nimport { ApiService } from './api.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'my-app';\n\n  constructor(private apiService: ApiService) {  }\n\n  limitPersonas: number = 5;\n  jsonData: any[] = [];//JSON.parse('[{\"Nombre\":\"Usuario1\",\"Puntaje\":370,\"DireccionFoto\":\"assets/fotoperfil.jpeg\"},{\"Nombre\":\"Usuario2\",\"Puntaje\":360,\"DireccionFoto\":\"assets/fotoperfil.jpeg\"},{\"Nombre\":\"Usuario3\",\"Puntaje\":340,\"DireccionFoto\":\"assets/fotoperfil.jpeg\"},{\"Nombre\":\"Usuario4\",\"Puntaje\":340,\"DireccionFoto\":\"assets/fotoperfil.jpeg\"},{\"Nombre\":\"Usuario5\",\"Puntaje\":250,\"DireccionFoto\":\"assets/fotoperfil.jpeg\"}]'); // Variable para almacenar el JSON\n  //jsonDataCount: number = 0; // Variable para almacenar la cantidad de elementos en el JSON\n\n  ngOnInit() {\n    // Aquí deberías cargar tu JSON, por ejemplo, desde un servicio HTTP\n    this.apiService.getPuntajesTotalesOrdenadosLimit(this.limitPersonas).subscribe(data => { \n      //console.log(data)\n      this.jsonData = data; \n      //this.jsonDataCount = this.jsonData.length;\n    });\n    \n  }\n\n  Juego1(){\n    this.apiService.getPuntajesPorJuegoOrdenadosLimit(\"Juego1\", this.limitPersonas).subscribe(data => { \n      this.jsonData = data;\n      console.log(data);\n    });\n  }\n\n  /*ngOnChanges(changes: SimpleChanges) {\n    if (changes['jsonData']) {\n      for (let i = 0;i < 5;i++){\n      }\n    }\n  }*/\n}"],"mappings":";AAAA,SAASA,SAAS,QAA8C,eAAe;AAQxE,WAAMC,YAAY,GAAlB,MAAMA,YAAY;EAGvBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAF9B,KAAAC,KAAK,GAAG,QAAQ;IAIhB,KAAAC,aAAa,GAAW,CAAC;IACzB,KAAAC,QAAQ,GAAU,EAAE,CAAC;EAH0B;EAI/C;EAEAC,QAAQA,CAAA;IACN;IACA,IAAI,CAACJ,UAAU,CAACK,gCAAgC,CAAC,IAAI,CAACH,aAAa,CAAC,CAACI,SAAS,CAACC,IAAI,IAAG;MACpF;MACA,IAAI,CAACJ,QAAQ,GAAGI,IAAI;MACpB;IACF,CAAC,CAAC;EAEJ;;EAEAC,MAAMA,CAAA;IACJ,IAAI,CAACR,UAAU,CAACS,iCAAiC,CAAC,QAAQ,EAAE,IAAI,CAACP,aAAa,CAAC,CAACI,SAAS,CAACC,IAAI,IAAG;MAC/F,IAAI,CAACJ,QAAQ,GAAGI,IAAI;MACpBG,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;IACnB,CAAC,CAAC;EACJ;CAQD;AAhCYT,YAAY,GAAAc,UAAA,EALxBf,SAAS,CAAC;EACTgB,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CAAC,qBAAqB;CAClC,CAAC,C,EACWjB,YAAY,CAgCxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}