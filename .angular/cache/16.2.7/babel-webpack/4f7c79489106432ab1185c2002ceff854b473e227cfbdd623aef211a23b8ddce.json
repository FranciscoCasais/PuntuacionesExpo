{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080/api';\n  }\n  getJuegos() {\n    return this.http.get(`${this.apiUrl}/getJuegos`);\n  }\n  getCountPuntajesTotales() {\n    return this.http.get(`${this.apiUrl}/getCountPuntajesTotales`);\n  }\n  // Método para obtener el conteo de puntajes por juego\n  getCountPuntajesPorJuego(nombreJuego) {\n    return this.http.get(`${this.apiUrl}/getCountPuntajesPorJuego?nombreJuego=${nombreJuego}`);\n  }\n  // Método para obtener puntajes totales ordenados\n  getPuntajesTotalesOrdenados() {\n    return this.http.get(`${this.apiUrl}/getPuntajesTotalesOrdenados`);\n  }\n  // Método para obtener puntajes por juego ordenados\n  getPuntajesPorJuegoOrdenados(nombreJuego) {\n    return this.http.get(`${this.apiUrl}/getPuntajesPorJuegoOrdenados?nombreJuego=${nombreJuego}`);\n  }\n  // Método para obtener puntajes totales ordenados con límite\n  getPuntajesTotalesOrdenadosLimit(limite) {\n    return this.http.get(`${this.apiUrl}/getPuntajesTotalesOrdenadosLimit?limite=${limite}`);\n  }\n  // Método para obtener puntajes por juego ordenados con límite\n  getPuntajesPorJuegoOrdenadosLimit(nombreJuego, limite) {\n    return this.http.get(`${this.apiUrl}/getPuntajesPorJuegoOrdenadosLimit?nombreJuego=${nombreJuego}&limite=${limite}`);\n  }\n  // Método para obtener puntajes totales ordenados con límite y offset\n  getPuntajesTotalesOrdenadosLimitOffset(limite, cantDescartados) {\n    return this.http.get(`${this.apiUrl}/getPuntajesTotalesOrdenadosLimitOffset?limite=${limite}&cantDescartados=${cantDescartados}`);\n  }\n  // Método para obtener puntajes por juego ordenados con límite y offset\n  getPuntajesPorJuegoOrdenadosLimitOffset(nombreJuego, limite, cantDescartados) {\n    return this.http.get(`${this.apiUrl}/getPuntajesPorJuegoOrdenadosLimitOffset?nombreJuego=${nombreJuego}&limite=${limite}&cantDescartados=${cantDescartados}`);\n  }\n  static #_ = this.ɵfac = function ApiService_Factory(t) {\n    return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ApiService,\n    factory: ApiService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["ApiService","constructor","http","apiUrl","getJuegos","get","getCountPuntajesTotales","getCountPuntajesPorJuego","nombreJuego","getPuntajesTotalesOrdenados","getPuntajesPorJuegoOrdenados","getPuntajesTotalesOrdenadosLimit","limite","getPuntajesPorJuegoOrdenadosLimit","getPuntajesTotalesOrdenadosLimitOffset","cantDescartados","getPuntajesPorJuegoOrdenadosLimitOffset","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/home/zlatan/Escritorio/PuntuacionesExpo/src/app/api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  private apiUrl = 'http://localhost:8080/api';\n  constructor(private http: HttpClient) { }\n\n  getJuegos(): Observable<any> {\n    return this.http.get<any>(`${this.apiUrl}/getJuegos`);\n  }\n\n  getCountPuntajesTotales(): Observable<any> {\n    return this.http.get<any>(`${this.apiUrl}/getCountPuntajesTotales`);\n  }\n\n  // Método para obtener el conteo de puntajes por juego\n  getCountPuntajesPorJuego(nombreJuego: string): Observable<any> {\n    return this.http.get<any>(`${this.apiUrl}/getCountPuntajesPorJuego?nombreJuego=${nombreJuego}`);\n  }\n\n  // Método para obtener puntajes totales ordenados\n  getPuntajesTotalesOrdenados(): Observable<any> {\n    return this.http.get<any>(`${this.apiUrl}/getPuntajesTotalesOrdenados`);\n  }\n \n  // Método para obtener puntajes por juego ordenados\n  getPuntajesPorJuegoOrdenados(nombreJuego: string): Observable<any> {\n    return this.http.get<any>(`${this.apiUrl}/getPuntajesPorJuegoOrdenados?nombreJuego=${nombreJuego}`);\n  }\n \n  // Método para obtener puntajes totales ordenados con límite\n  getPuntajesTotalesOrdenadosLimit(limite: number): Observable<any> {\n    return this.http.get<any>(`${this.apiUrl}/getPuntajesTotalesOrdenadosLimit?limite=${limite}`);\n  }\n \n  // Método para obtener puntajes por juego ordenados con límite\n  getPuntajesPorJuegoOrdenadosLimit(nombreJuego: string, limite: number): Observable<any> {\n    return this.http.get<any>(`${this.apiUrl}/getPuntajesPorJuegoOrdenadosLimit?nombreJuego=${nombreJuego}&limite=${limite}`);\n  }\n \n  // Método para obtener puntajes totales ordenados con límite y offset\n  getPuntajesTotalesOrdenadosLimitOffset(limite: number, cantDescartados: number): Observable<any> {\n    return this.http.get<any>(`${this.apiUrl}/getPuntajesTotalesOrdenadosLimitOffset?limite=${limite}&cantDescartados=${cantDescartados}`);\n  }\n \n  // Método para obtener puntajes por juego ordenados con límite y offset\n  getPuntajesPorJuegoOrdenadosLimitOffset(nombreJuego: string, limite: number, cantDescartados: number): Observable<any> {\n    return this.http.get<any>(`${this.apiUrl}/getPuntajesPorJuegoOrdenadosLimitOffset?nombreJuego=${nombreJuego}&limite=${limite}&cantDescartados=${cantDescartados}`);\n  }\n  \n}\n"],"mappings":";;AAOA,OAAM,MAAOA,UAAU;EAErBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IADhB,KAAAC,MAAM,GAAG,2BAA2B;EACJ;EAExCC,SAASA,CAAA;IACP,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAM,GAAG,IAAI,CAACF,MAAM,YAAY,CAAC;EACvD;EAEAG,uBAAuBA,CAAA;IACrB,OAAO,IAAI,CAACJ,IAAI,CAACG,GAAG,CAAM,GAAG,IAAI,CAACF,MAAM,0BAA0B,CAAC;EACrE;EAEA;EACAI,wBAAwBA,CAACC,WAAmB;IAC1C,OAAO,IAAI,CAACN,IAAI,CAACG,GAAG,CAAM,GAAG,IAAI,CAACF,MAAM,yCAAyCK,WAAW,EAAE,CAAC;EACjG;EAEA;EACAC,2BAA2BA,CAAA;IACzB,OAAO,IAAI,CAACP,IAAI,CAACG,GAAG,CAAM,GAAG,IAAI,CAACF,MAAM,8BAA8B,CAAC;EACzE;EAEA;EACAO,4BAA4BA,CAACF,WAAmB;IAC9C,OAAO,IAAI,CAACN,IAAI,CAACG,GAAG,CAAM,GAAG,IAAI,CAACF,MAAM,6CAA6CK,WAAW,EAAE,CAAC;EACrG;EAEA;EACAG,gCAAgCA,CAACC,MAAc;IAC7C,OAAO,IAAI,CAACV,IAAI,CAACG,GAAG,CAAM,GAAG,IAAI,CAACF,MAAM,4CAA4CS,MAAM,EAAE,CAAC;EAC/F;EAEA;EACAC,iCAAiCA,CAACL,WAAmB,EAAEI,MAAc;IACnE,OAAO,IAAI,CAACV,IAAI,CAACG,GAAG,CAAM,GAAG,IAAI,CAACF,MAAM,kDAAkDK,WAAW,WAAWI,MAAM,EAAE,CAAC;EAC3H;EAEA;EACAE,sCAAsCA,CAACF,MAAc,EAAEG,eAAuB;IAC5E,OAAO,IAAI,CAACb,IAAI,CAACG,GAAG,CAAM,GAAG,IAAI,CAACF,MAAM,kDAAkDS,MAAM,oBAAoBG,eAAe,EAAE,CAAC;EACxI;EAEA;EACAC,uCAAuCA,CAACR,WAAmB,EAAEI,MAAc,EAAEG,eAAuB;IAClG,OAAO,IAAI,CAACb,IAAI,CAACG,GAAG,CAAM,GAAG,IAAI,CAACF,MAAM,wDAAwDK,WAAW,WAAWI,MAAM,oBAAoBG,eAAe,EAAE,CAAC;EACpK;EAAC,QAAAE,CAAA,G;qBA7CUjB,UAAU,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAVtB,UAAU;IAAAuB,OAAA,EAAVvB,UAAU,CAAAwB,IAAA;IAAAC,UAAA,EAFT;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}